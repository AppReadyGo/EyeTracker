@using EyeTracker.Helpers;
@using EyeTracker.Model
@using EyeTracker.Common
@using EyeTracker.Model.Master
@using EyeTracker.Model.Pages.Portfolio
@using EyeTracker.Model.Pages.Analytics
@model ABCompareModel
@{
    Layout = "~/Views/Shared/_Analytics.cshtml";
}
@section title { A/B Compare }
@section header 
{
    <script src="@Html.Content("~/Scripts/ThridParty/DateFormat.js")" type="text/javascript"></script>
    <script src="@Html.Content("~/Scripts/ThridParty/Flot/jquery.flot.min.js")" type="text/javascript"></script>
    <script src="@Html.Content("~/Scripts/ThridParty/Flot/jquery.flot.resize.min.js")" type="text/javascript"></script>
    <script src="@Html.Content("~/Scripts/ThridParty/Flot/jquery.flot.pie.js")" type="text/javascript"></script>
    <link href="@Html.Content("~/Content/shared/filter.css")" rel="stylesheet" type="text/css" />
    <script src="@Html.Content("~/Scripts/filter.js")" type="text/javascript"></script>
    <style type="text/css">
        /*Some CSS*/
    .magnify * {margin: 0; padding: 0;}
    .magnify {position: relative;}
    .charts .title span {
    line-height: 23px;
    color: white;
    background-color: #666;
    border: 1px solid #666;
    border-bottom-width: 2px;
    border-radius: 2px 2px 0px 0px;
    padding: 2px 5px 2px 5px;
    }

    .charts .title {
    border-bottom: 1px solid #666;
    margin-bottom: 10px;
    }

    /*Lets create the magnifying glass*/
    .large {
	    width: 175px; height: 175px;
	    position: absolute;
	    border-radius: 100%;
	
	    /*Multiple box shadows to achieve the glass effect*/
	    box-shadow: 0 0 0 7px rgba(255, 255, 255, 0.85), 
	    0 0 7px 7px rgba(0, 0, 0, 0.25), 
	    inset 0 0 40px 2px rgba(0, 0, 0, 0.25);
	
	    /*Lets load up the large image first*/
	    background: url('/Analytics/ClickHeatMapImage/<%=Model.SubMaster.FilterUrlPart') no-repeat;
	
	    /*hide the glass by default*/
	    display: none;
    }

    /*To solve overlap bug at the edges during magnification*/
    .small { display: block; }
    article .magnify{border:5px solid #000;
            -webkit-background-clip: padding-box;-moz-background-clip: padding;background-clip: padding-box;
            -moz-border-radius: 0.5em;-webkit-border-radius: 0.5em;border-radius: 0.5em;
    }
    article .large{z-index:1000;}
    article img{width:100%;}
    article{width:30%;float:left;padding:0 10px;}

    #scrolls_pie, #clicks_pie, #visits_pie{height:200px;}
    </style>
    <script type="text/javascript">
        $(document).ready(function () {
            var data = <%= ViewData["PieData"];
            $.plot($('#scrolls_pie'), data.scrolls,
            {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        label: {
                            show: true,
                            radius: 2 / 3,
                            formatter: function (label, series) {
                                return '<div style="font-size:8pt;text-align:center;padding:2px;color:black;">' + label + '<br/>' + Math.round(series.percent) + '%</div>';
                            },
                            threshold: 0.1
                        }
                    }
                },
                legend: {
                    show: false
                }
            });
            $.plot($('#clicks_pie'), data.clicks,
            {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        label: {
                            show: true,
                            radius: 2 / 3,
                            formatter: function (label, series) {
                                return '<div style="font-size:8pt;text-align:center;padding:2px;color:black;">' + label + '<br/>' + Math.round(series.percent) + '%</div>';
                            },
                            threshold: 0.1
                        }
                    }
                },
                legend: {
                    show: false
                }
            });
            $.plot($('#visits_pie'), data.visits,
            {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        label: {
                            show: true,
                            radius: 2 / 3,
                            formatter: function (label, series) {
                                return '<div style="font-size:8pt;text-align:center;padding:2px;color:black;">' + label + '<br/>' + Math.round(series.percent) + '%</div>';
                            },
                            threshold: 0.1
                        }
                    }
                },
                legend: {
                    show: false
                }
            });

            $('#firstScreen,#secondScreen').change(function () {
                var from = $("#datepicker_from").datepicker("getDate");
                var to = $("#datepicker_to").datepicker("getDate");
                //var portfolios = $('#SelectedPortfolioId').val();
                //var applications = $('#SelectedApplicationId').val();
                var screenSizes = $('#SelectedScreenSize').val();
                var paths = $('#firstScreen').val();
                var secondPath = $('#secondScreen').val();
                var url = '/Analytics/' + analytics.action +
                    '/?aid=' + analytics.aid +
                    '&fd=' + $.datepicker.formatDate('dd-M-yy', from) +
                    '&td=' + $.datepicker.formatDate('dd-M-yy', to);
                if (screenSizes) url += '&ss=' + screenSizes;
                if (paths) url += '&p=' + paths;
                if (secondPath) url += '&sp=' + secondPath;

                document.location.href = url;
            });


            var native_width = 0;
            var native_height = 0;

            //Now the mousemove function
            //        $(".magnify").mousemove(function (e) {
            //            var large = $(this).find('.large');
            //            var small = $(this).find('.small');
            //            //When the user hovers on the image, the script will first calculate
            //            //the native dimensions if they don't exist. Only after the native dimensions
            //            //are available, the script will show the zoomed version.
            //            if (!native_width && !native_height) {
            //                //This will create a new image object with the same image as that in .small
            //                //We cannot directly get the dimensions from .small because of the 
            //                //width specified to 200px in the html. To get the actual dimensions we have
            //                //created this image object.
            //                var image_object = new Image();
            //                image_object.src = small.attr("src");

            //                //This code is wrapped in the .load function which is important.
            //                //width and height of the object would return 0 if accessed before 
            //                //the image gets loaded.
            //                native_width = image_object.width;
            //                native_height = image_object.height;
            //            } else {
            //                //x/y coordinates of the mouse
            //                //This is the position of .magnify with respect to the document.
            //                var magnify_offset = $(this).offset();
            //                //We will deduct the positions of .magnify from the mouse positions with
            //                //respect to the document to get the mouse positions with respect to the 
            //                //container(.magnify)
            //                var mx = e.pageX - magnify_offset.left;
            //                var my = e.pageY - magnify_offset.top;

            //                //Finally the code to fade out the glass if the mouse is outside the container
            //                if (mx < $(this).width() && my < $(this).height() && mx > 0 && my > 0) {
            //                    large.fadeIn(100);
            //                }
            //                else {
            //                    large.fadeOut(100);
            //                }
            //                if (large.is(":visible")) {
            //                    //The background position of .large will be changed according to the position
            //                    //of the mouse over the .small image. So we will get the ratio of the pixel
            //                    //under the mouse pointer with respect to the image and use that to position the 
            //                    //large image inside the magnifying glass
            //                    var rx = Math.round(mx / small.width() * native_width - large.width() / 2) * -1;
            //                    var ry = Math.round(my / small.height() * native_height - large.height() / 2) * -1;
            //                    var bgp = rx + "px " + ry + "px";

            //                    //Time to move the magnifying glass with the mouse
            //                    var px = mx - large.width() / 2;
            //                    var py = my - large.height() / 2;
            //                    //Now the glass moves with the mouse
            //                    //The logic is to deduct half of the glass's width and height from the 
            //                    //mouse coordinates to place it with its center at the mouse coordinates

            //                    //If you hover on the image now, you should see the magnifying glass in action
            //                    large.css({ left: px, top: py, backgroundPosition: bgp });
            //                }
            //            }
            //        })
        })
    </script>
}
@section topmenu { }
@Html.Partial("~/Views/Analytics/Filter.cshtml", Model)
<div>
    <article>
        <p><a id="showFirstImage" style="cursor:pointer;">Show Screen</a> &nbsp; @Html.DropDownList("firstScreen", Model.FirstScreenPathes)</p>
        @if (!Model.FirstHasClicks)
        { 
            <div class="no-data">
                <img alt="Uh-oh! Nobody used your application yet." class="notice" src="/Content/New/Images/notice_nobody_used.png" />
            </div>
        }
        else if (!Model.FirstHasFilteredClicks)
        {
            <div class="no-data">
                <img alt="Oops, ther is no data for this time period" class="notice" src="/Content/New/Images/notice_no-data.png" />
            </div>
        }
        else if (!Model.FirstHasClicks && !Model.FirstHasClicks)
        {
            <div class="no-data">
                <img alt="Ahem! We have the data but no screenshot." class="notice" src="/Content/New/Images/notice_no_screen_shot.png" style="margin-bottom:40px;" />
            </div>
        }
        else
        {
            <div class="magnify">
                <div class="large"></div>
                <img class="small" src="/Analytics/ClickHeatMapImage/<%=Model.View.FirstScreenUrlPart"/>
            </div>
        }
    </article>
    <article>
        <p><a id="showSecondImage" style="cursor:pointer;">Show Screen</a> &nbsp; @Html.DropDownList("secondScreen", Model.SecondScreenPathes)</p>
        @if (!Model.SecondHasClicks)
        {
            <div class="no-data">
                <img alt="Uh-oh! Nobody used your application yet." class="notice" src="/Content/New/Images/notice_nobody_used.png" />
            </div>
        }
        else if (!Model.SecondHasFilteredClicks)
        {
            <div class="no-data">
                <img alt="Oops, ther is no data for this time period" class="notice" src="/Content/New/Images/notice_no-data.png" />
            </div>
        }
        else if (!Model.SecondHasClicks && !Model.SecondHasClicks)
        {
            <div class="no-data">
                <img alt="Ahem! We have the data but no screenshot." class="notice" src="/Content/New/Images/notice_no_screen_shot.png" style="margin-bottom:40px;" />
            </div>
        }
        else
        {
            <div class="magnify">
                <div class="large"></div>
                <img class="small" src="/Analytics/ClickHeatMapImage/<%=Model.View.SecondScreenUrlPart"/>
            </div>
        }
    </article>
    <article>
    @if (Model.FirstHasClicks && Model.SecondHasClicks && Model.SecondHasFilteredClicks && Model.FirstHasFilteredClicks)
    {
        <div class="charts">
            <div class="title"><span>Clicks</span></div>
            <div id="clicks_pie"></div>
        </div>
        <div class="charts">
            <div class="title"><span>Visits</span></div>
            <div id="visits_pie"></div>
        </div>
        <div class="charts">
            <div class="title"><span>Scrolls</span></div>
            <div id="scrolls_pie"></div>
        </div>  
    }
    </article>
    <div style="clear:both;"></div>
</div>
